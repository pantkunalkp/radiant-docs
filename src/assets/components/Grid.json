{
 "tags": {},
 "filePath": "/Users/navneet/my-workspace/radiant/scripts/tmpf/Grid.tsx",
 "description": "",
 "displayName": "Grid",
 "methods": [],
 "props": {
  "children": {
   "defaultValue": null,
   "description": "The content of the component.",
   "name": "children",
   "parent": {
    "fileName": "radiant/node_modules/@mui/system/Unstable_Grid/GridProps.d.ts",
    "name": "GridBaseProps"
   },
   "declarations": [
    {
     "fileName": "radiant/node_modules/@mui/system/Unstable_Grid/GridProps.d.ts",
     "name": "GridBaseProps"
    }
   ],
   "required": false,
   "type": {
    "name": "ReactNode"
   }
  },
  "columns": {
   "defaultValue": {
    "value": "12"
   },
   "description": "The number of columns.",
   "name": "columns",
   "parent": {
    "fileName": "radiant/node_modules/@mui/system/Unstable_Grid/GridProps.d.ts",
    "name": "GridBaseProps"
   },
   "declarations": [
    {
     "fileName": "radiant/node_modules/@mui/system/Unstable_Grid/GridProps.d.ts",
     "name": "GridBaseProps"
    }
   ],
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<number>"
   }
  },
  "columnSpacing": {
   "defaultValue": null,
   "description": "Defines the horizontal space between the type `item` components.\nIt overrides the value of the `spacing` prop.",
   "name": "columnSpacing",
   "parent": {
    "fileName": "radiant/node_modules/@mui/system/Unstable_Grid/GridProps.d.ts",
    "name": "GridBaseProps"
   },
   "declarations": [
    {
     "fileName": "radiant/node_modules/@mui/system/Unstable_Grid/GridProps.d.ts",
     "name": "GridBaseProps"
    }
   ],
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<GridSpacing>"
   }
  },
  "container": {
   "defaultValue": {
    "value": "false"
   },
   "description": "If `true`, the component will have the flex *container* behavior.\nYou should be wrapping *items* with a *container*.",
   "name": "container",
   "parent": {
    "fileName": "radiant/node_modules/@mui/system/Unstable_Grid/GridProps.d.ts",
    "name": "GridBaseProps"
   },
   "declarations": [
    {
     "fileName": "radiant/node_modules/@mui/system/Unstable_Grid/GridProps.d.ts",
     "name": "GridBaseProps"
    }
   ],
   "required": false,
   "type": {
    "name": "boolean"
   }
  },
  "direction": {
   "defaultValue": {
    "value": "'row'"
   },
   "description": "Defines the `flex-direction` style property.\nIt is applied for all screen sizes.",
   "name": "direction",
   "parent": {
    "fileName": "radiant/node_modules/@mui/system/Unstable_Grid/GridProps.d.ts",
    "name": "GridBaseProps"
   },
   "declarations": [
    {
     "fileName": "radiant/node_modules/@mui/system/Unstable_Grid/GridProps.d.ts",
     "name": "GridBaseProps"
    }
   ],
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<GridDirection>"
   }
  },
  "disableEqualOverflow": {
   "defaultValue": null,
   "description": "If `true`, the negative margin and padding are apply only to the top and left sides of the grid.",
   "name": "disableEqualOverflow",
   "parent": {
    "fileName": "radiant/node_modules/@mui/system/Unstable_Grid/GridProps.d.ts",
    "name": "GridBaseProps"
   },
   "declarations": [
    {
     "fileName": "radiant/node_modules/@mui/system/Unstable_Grid/GridProps.d.ts",
     "name": "GridBaseProps"
    }
   ],
   "required": false,
   "type": {
    "name": "boolean"
   }
  },
  "rowSpacing": {
   "defaultValue": null,
   "description": "Defines the vertical space between the type `item` components.\nIt overrides the value of the `spacing` prop.",
   "name": "rowSpacing",
   "parent": {
    "fileName": "radiant/node_modules/@mui/system/Unstable_Grid/GridProps.d.ts",
    "name": "GridBaseProps"
   },
   "declarations": [
    {
     "fileName": "radiant/node_modules/@mui/system/Unstable_Grid/GridProps.d.ts",
     "name": "GridBaseProps"
    }
   ],
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<GridSpacing>"
   }
  },
  "spacing": {
   "defaultValue": {
    "value": "0"
   },
   "description": "Defines the space between the type `item` components.\nIt can only be used on a type `container` component.",
   "name": "spacing",
   "parent": {
    "fileName": "radiant/node_modules/@mui/system/Unstable_Grid/GridProps.d.ts",
    "name": "GridBaseProps"
   },
   "declarations": [
    {
     "fileName": "radiant/node_modules/@mui/system/Unstable_Grid/GridProps.d.ts",
     "name": "GridBaseProps"
    }
   ],
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<GridSpacing>"
   }
  },
  "wrap": {
   "defaultValue": {
    "value": "'wrap'"
   },
   "description": "Defines the `flex-wrap` style property.\nIt's applied for all screen sizes.",
   "name": "wrap",
   "parent": {
    "fileName": "radiant/node_modules/@mui/system/Unstable_Grid/GridProps.d.ts",
    "name": "GridBaseProps"
   },
   "declarations": [
    {
     "fileName": "radiant/node_modules/@mui/system/Unstable_Grid/GridProps.d.ts",
     "name": "GridBaseProps"
    }
   ],
   "required": false,
   "type": {
    "name": "GridWrap"
   }
  },
  "lg": {
   "defaultValue": {
    "value": "false"
   },
   "description": "If a number, it sets the number of columns the grid item uses.\nIt can't be greater than the total number of columns of the container (12 by default).\nIf 'auto', the grid item's width matches its content.\nIf false, the prop is ignored.\nIf true, the grid item's width grows to use the space available in the grid container.\nThe value is applied for the `lg` breakpoint and wider screens if not overridden.",
   "name": "lg",
   "parent": {
    "fileName": "radiant/node_modules/@mui/system/Unstable_Grid/GridProps.d.ts",
    "name": "GridDefaultBreakpoints"
   },
   "declarations": [
    {
     "fileName": "radiant/node_modules/@mui/system/Unstable_Grid/GridProps.d.ts",
     "name": "GridDefaultBreakpoints"
    }
   ],
   "required": false,
   "type": {
    "name": "boolean | GridSize"
   }
  },
  "lgOffset": {
   "defaultValue": null,
   "description": "If a number, it sets the margin-left equals to the number of columns the grid item uses.\nIf 'auto', the grid item push itself to the right-end of the container.\nThe value is applied for the `lg` breakpoint and wider screens if not overridden.",
   "name": "lgOffset",
   "parent": {
    "fileName": "radiant/node_modules/@mui/system/Unstable_Grid/GridProps.d.ts",
    "name": "GridDefaultBreakpoints"
   },
   "declarations": [
    {
     "fileName": "radiant/node_modules/@mui/system/Unstable_Grid/GridProps.d.ts",
     "name": "GridDefaultBreakpoints"
    }
   ],
   "required": false,
   "type": {
    "name": "GridSize"
   }
  },
  "md": {
   "defaultValue": {
    "value": "false"
   },
   "description": "If a number, it sets the number of columns the grid item uses.\nIt can't be greater than the total number of columns of the container (12 by default).\nIf 'auto', the grid item's width matches its content.\nIf false, the prop is ignored.\nIf true, the grid item's width grows to use the space available in the grid container.\nThe value is applied for the `md` breakpoint and wider screens if not overridden.",
   "name": "md",
   "parent": {
    "fileName": "radiant/node_modules/@mui/system/Unstable_Grid/GridProps.d.ts",
    "name": "GridDefaultBreakpoints"
   },
   "declarations": [
    {
     "fileName": "radiant/node_modules/@mui/system/Unstable_Grid/GridProps.d.ts",
     "name": "GridDefaultBreakpoints"
    }
   ],
   "required": false,
   "type": {
    "name": "boolean | GridSize"
   }
  },
  "mdOffset": {
   "defaultValue": null,
   "description": "If a number, it sets the margin-left equals to the number of columns the grid item uses.\nIf 'auto', the grid item push itself to the right-end of the container.\nThe value is applied for the `md` breakpoint and wider screens if not overridden.",
   "name": "mdOffset",
   "parent": {
    "fileName": "radiant/node_modules/@mui/system/Unstable_Grid/GridProps.d.ts",
    "name": "GridDefaultBreakpoints"
   },
   "declarations": [
    {
     "fileName": "radiant/node_modules/@mui/system/Unstable_Grid/GridProps.d.ts",
     "name": "GridDefaultBreakpoints"
    }
   ],
   "required": false,
   "type": {
    "name": "GridSize"
   }
  },
  "sm": {
   "defaultValue": {
    "value": "false"
   },
   "description": "If a number, it sets the number of columns the grid item uses.\nIt can't be greater than the total number of columns of the container (12 by default).\nIf 'auto', the grid item's width matches its content.\nIf false, the prop is ignored.\nIf true, the grid item's width grows to use the space available in the grid container.\nThe value is applied for the `sm` breakpoint and wider screens if not overridden.",
   "name": "sm",
   "parent": {
    "fileName": "radiant/node_modules/@mui/system/Unstable_Grid/GridProps.d.ts",
    "name": "GridDefaultBreakpoints"
   },
   "declarations": [
    {
     "fileName": "radiant/node_modules/@mui/system/Unstable_Grid/GridProps.d.ts",
     "name": "GridDefaultBreakpoints"
    }
   ],
   "required": false,
   "type": {
    "name": "boolean | GridSize"
   }
  },
  "smOffset": {
   "defaultValue": null,
   "description": "If a number, it sets the margin-left equals to the number of columns the grid item uses.\nIf 'auto', the grid item push itself to the right-end of the container.\nThe value is applied for the `sm` breakpoint and wider screens if not overridden.",
   "name": "smOffset",
   "parent": {
    "fileName": "radiant/node_modules/@mui/system/Unstable_Grid/GridProps.d.ts",
    "name": "GridDefaultBreakpoints"
   },
   "declarations": [
    {
     "fileName": "radiant/node_modules/@mui/system/Unstable_Grid/GridProps.d.ts",
     "name": "GridDefaultBreakpoints"
    }
   ],
   "required": false,
   "type": {
    "name": "GridSize"
   }
  },
  "xl": {
   "defaultValue": {
    "value": "false"
   },
   "description": "If a number, it sets the number of columns the grid item uses.\nIt can't be greater than the total number of columns of the container (12 by default).\nIf 'auto', the grid item's width matches its content.\nIf false, the prop is ignored.\nIf true, the grid item's width grows to use the space available in the grid container.\nThe value is applied for the `xl` breakpoint and wider screens if not overridden.",
   "name": "xl",
   "parent": {
    "fileName": "radiant/node_modules/@mui/system/Unstable_Grid/GridProps.d.ts",
    "name": "GridDefaultBreakpoints"
   },
   "declarations": [
    {
     "fileName": "radiant/node_modules/@mui/system/Unstable_Grid/GridProps.d.ts",
     "name": "GridDefaultBreakpoints"
    }
   ],
   "required": false,
   "type": {
    "name": "boolean | GridSize"
   }
  },
  "xlOffset": {
   "defaultValue": null,
   "description": "If a number, it sets the margin-left equals to the number of columns the grid item uses.\nIf 'auto', the grid item push itself to the right-end of the container.\nThe value is applied for the `xl` breakpoint and wider screens if not overridden.",
   "name": "xlOffset",
   "parent": {
    "fileName": "radiant/node_modules/@mui/system/Unstable_Grid/GridProps.d.ts",
    "name": "GridDefaultBreakpoints"
   },
   "declarations": [
    {
     "fileName": "radiant/node_modules/@mui/system/Unstable_Grid/GridProps.d.ts",
     "name": "GridDefaultBreakpoints"
    }
   ],
   "required": false,
   "type": {
    "name": "GridSize"
   }
  },
  "xs": {
   "defaultValue": {
    "value": "false"
   },
   "description": "If a number, it sets the number of columns the grid item uses.\nIt can't be greater than the total number of columns of the container (12 by default).\nIf 'auto', the grid item's width matches its content.\nIf false, the prop is ignored.\nIf true, the grid item's width grows to use the space available in the grid container.\nThe value is applied for all the screen sizes with the lowest priority.",
   "name": "xs",
   "parent": {
    "fileName": "radiant/node_modules/@mui/system/Unstable_Grid/GridProps.d.ts",
    "name": "GridDefaultBreakpoints"
   },
   "declarations": [
    {
     "fileName": "radiant/node_modules/@mui/system/Unstable_Grid/GridProps.d.ts",
     "name": "GridDefaultBreakpoints"
    }
   ],
   "required": false,
   "type": {
    "name": "boolean | GridSize"
   }
  },
  "xsOffset": {
   "defaultValue": null,
   "description": "If a number, it sets the margin-left equals to the number of columns the grid item uses.\nIf 'auto', the grid item push itself to the right-end of the container.\nThe value is applied for the `xs` breakpoint and wider screens if not overridden.",
   "name": "xsOffset",
   "parent": {
    "fileName": "radiant/node_modules/@mui/system/Unstable_Grid/GridProps.d.ts",
    "name": "GridDefaultBreakpoints"
   },
   "declarations": [
    {
     "fileName": "radiant/node_modules/@mui/system/Unstable_Grid/GridProps.d.ts",
     "name": "GridDefaultBreakpoints"
    }
   ],
   "required": false,
   "type": {
    "name": "GridSize"
   }
  },
  "sx": {
   "defaultValue": null,
   "description": "",
   "name": "sx",
   "declarations": [
    {
     "fileName": "radiant/src/Grid/GridProps.ts",
     "name": "TypeLiteral"
    }
   ],
   "required": false,
   "type": {
    "name": "SxProps"
   }
  },
  "border": {
   "defaultValue": null,
   "description": "",
   "name": "border",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<number | (string & {}) | \"inset\" | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | \"medium\" | \"thick\" | \"thin\" | \"dashed\" | \"dotted\" | \"double\" | ... 183 more ... | \"currentcolor\"> | ((theme: Theme) => ResponsiveStyleValue<...>)"
   }
  },
  "borderTop": {
   "defaultValue": null,
   "description": "",
   "name": "borderTop",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<BorderTop<string | number> | BorderTop<string | number>[]> | ((theme: Theme) => ResponsiveStyleValue<BorderTop<string | number> | BorderTop<...>[]>)"
   }
  },
  "borderRight": {
   "defaultValue": null,
   "description": "",
   "name": "borderRight",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<BorderRight<string | number> | BorderRight<string | number>[]> | ((theme: Theme) => ResponsiveStyleValue<BorderRight<...> | BorderRight<...>[]>)"
   }
  },
  "borderBottom": {
   "defaultValue": null,
   "description": "",
   "name": "borderBottom",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<BorderBottom<string | number> | BorderBottom<string | number>[]> | ((theme: Theme) => ResponsiveStyleValue<...>)"
   }
  },
  "borderLeft": {
   "defaultValue": null,
   "description": "",
   "name": "borderLeft",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<BorderLeft<string | number> | BorderLeft<string | number>[]> | ((theme: Theme) => ResponsiveStyleValue<BorderLeft<string | number> | BorderLeft<...>[]>)"
   }
  },
  "borderColor": {
   "defaultValue": null,
   "description": "",
   "name": "borderColor",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<BorderColor | BorderColor[]> | ((theme: Theme) => ResponsiveStyleValue<BorderColor | BorderColor[]>)"
   }
  },
  "borderRadius": {
   "defaultValue": null,
   "description": "",
   "name": "borderRadius",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<BorderRadius<string | number> | BorderRadius<string | number>[]> | ((theme: Theme) => ResponsiveStyleValue<...>)"
   }
  },
  "display": {
   "defaultValue": null,
   "description": "",
   "name": "display",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<Display | Display[]> | ((theme: Theme) => ResponsiveStyleValue<Display | Display[]>)"
   }
  },
  "displayPrint": {
   "defaultValue": null,
   "description": "",
   "name": "displayPrint",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<Display | Display[]> | ((theme: Theme) => ResponsiveStyleValue<Display | Display[]>)"
   }
  },
  "overflow": {
   "defaultValue": null,
   "description": "",
   "name": "overflow",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<Overflow | Overflow[]> | ((theme: Theme) => ResponsiveStyleValue<Overflow | Overflow[]>)"
   }
  },
  "textOverflow": {
   "defaultValue": null,
   "description": "",
   "name": "textOverflow",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<TextOverflow | TextOverflow[]> | ((theme: Theme) => ResponsiveStyleValue<TextOverflow | TextOverflow[]>)"
   }
  },
  "visibility": {
   "defaultValue": null,
   "description": "",
   "name": "visibility",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<Visibility | Visibility[]> | ((theme: Theme) => ResponsiveStyleValue<Visibility | Visibility[]>)"
   }
  },
  "whiteSpace": {
   "defaultValue": null,
   "description": "",
   "name": "whiteSpace",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<WhiteSpace | WhiteSpace[]> | ((theme: Theme) => ResponsiveStyleValue<WhiteSpace | WhiteSpace[]>)"
   }
  },
  "flexBasis": {
   "defaultValue": null,
   "description": "",
   "name": "flexBasis",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<FlexBasis<string | number> | FlexBasis<string | number>[]> | ((theme: Theme) => ResponsiveStyleValue<FlexBasis<string | number> | FlexBasis<...>[]>)"
   }
  },
  "flexDirection": {
   "defaultValue": null,
   "description": "",
   "name": "flexDirection",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<FlexDirection | FlexDirection[]> | ((theme: Theme) => ResponsiveStyleValue<FlexDirection | FlexDirection[]>)"
   }
  },
  "flexWrap": {
   "defaultValue": null,
   "description": "",
   "name": "flexWrap",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<FlexWrap | FlexWrap[]> | ((theme: Theme) => ResponsiveStyleValue<FlexWrap | FlexWrap[]>)"
   }
  },
  "justifyContent": {
   "defaultValue": null,
   "description": "",
   "name": "justifyContent",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<JustifyContent | JustifyContent[]> | ((theme: Theme) => ResponsiveStyleValue<JustifyContent | JustifyContent[]>)"
   }
  },
  "alignItems": {
   "defaultValue": null,
   "description": "",
   "name": "alignItems",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<AlignItems | AlignItems[]> | ((theme: Theme) => ResponsiveStyleValue<AlignItems | AlignItems[]>)"
   }
  },
  "alignContent": {
   "defaultValue": null,
   "description": "",
   "name": "alignContent",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<AlignContent | AlignContent[]> | ((theme: Theme) => ResponsiveStyleValue<AlignContent | AlignContent[]>)"
   }
  },
  "order": {
   "defaultValue": null,
   "description": "",
   "name": "order",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<Order | Order[]> | ((theme: Theme) => ResponsiveStyleValue<Order | Order[]>)"
   }
  },
  "flex": {
   "defaultValue": null,
   "description": "",
   "name": "flex",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<Flex<string | number> | Flex<string | number>[]> | ((theme: Theme) => ResponsiveStyleValue<Flex<string | number> | Flex<...>[]>)"
   }
  },
  "flexGrow": {
   "defaultValue": null,
   "description": "",
   "name": "flexGrow",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<FlexGrow | FlexGrow[]> | ((theme: Theme) => ResponsiveStyleValue<FlexGrow | FlexGrow[]>)"
   }
  },
  "flexShrink": {
   "defaultValue": null,
   "description": "",
   "name": "flexShrink",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<FlexShrink | FlexShrink[]> | ((theme: Theme) => ResponsiveStyleValue<FlexShrink | FlexShrink[]>)"
   }
  },
  "alignSelf": {
   "defaultValue": null,
   "description": "",
   "name": "alignSelf",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<AlignSelf | AlignSelf[]> | ((theme: Theme) => ResponsiveStyleValue<AlignSelf | AlignSelf[]>)"
   }
  },
  "justifyItems": {
   "defaultValue": null,
   "description": "",
   "name": "justifyItems",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<JustifyItems | JustifyItems[]> | ((theme: Theme) => ResponsiveStyleValue<JustifyItems | JustifyItems[]>)"
   }
  },
  "justifySelf": {
   "defaultValue": null,
   "description": "",
   "name": "justifySelf",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<JustifySelf | JustifySelf[]> | ((theme: Theme) => ResponsiveStyleValue<JustifySelf | JustifySelf[]>)"
   }
  },
  "gap": {
   "defaultValue": null,
   "description": "",
   "name": "gap",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<Gap<string | number> | Gap<string | number>[]> | ((theme: Theme) => ResponsiveStyleValue<Gap<string | number> | Gap<string | number>[]>)"
   }
  },
  "columnGap": {
   "defaultValue": null,
   "description": "",
   "name": "columnGap",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<ColumnGap<string | number> | ColumnGap<string | number>[]> | ((theme: Theme) => ResponsiveStyleValue<ColumnGap<string | number> | ColumnGap<...>[]>)"
   }
  },
  "rowGap": {
   "defaultValue": null,
   "description": "",
   "name": "rowGap",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<RowGap<string | number> | RowGap<string | number>[]> | ((theme: Theme) => ResponsiveStyleValue<RowGap<string | number> | RowGap<...>[]>)"
   }
  },
  "gridColumn": {
   "defaultValue": null,
   "description": "",
   "name": "gridColumn",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<GridColumn | GridColumn[]> | ((theme: Theme) => ResponsiveStyleValue<GridColumn | GridColumn[]>)"
   }
  },
  "gridRow": {
   "defaultValue": null,
   "description": "",
   "name": "gridRow",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<GridRow | GridRow[]> | ((theme: Theme) => ResponsiveStyleValue<GridRow | GridRow[]>)"
   }
  },
  "gridAutoFlow": {
   "defaultValue": null,
   "description": "",
   "name": "gridAutoFlow",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<GridAutoFlow | GridAutoFlow[]> | ((theme: Theme) => ResponsiveStyleValue<GridAutoFlow | GridAutoFlow[]>)"
   }
  },
  "gridAutoColumns": {
   "defaultValue": null,
   "description": "",
   "name": "gridAutoColumns",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<GridAutoColumns<string | number> | GridAutoColumns<string | number>[]> | ((theme: Theme) => ResponsiveStyleValue<...>)"
   }
  },
  "gridAutoRows": {
   "defaultValue": null,
   "description": "",
   "name": "gridAutoRows",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<GridAutoRows<string | number> | GridAutoRows<string | number>[]> | ((theme: Theme) => ResponsiveStyleValue<...>)"
   }
  },
  "gridTemplateColumns": {
   "defaultValue": null,
   "description": "",
   "name": "gridTemplateColumns",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<GridTemplateColumns<string | number> | GridTemplateColumns<string | number>[]> | ((theme: Theme) => ResponsiveStyleValue<...>)"
   }
  },
  "gridTemplateRows": {
   "defaultValue": null,
   "description": "",
   "name": "gridTemplateRows",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<GridTemplateRows<string | number> | GridTemplateRows<string | number>[]> | ((theme: Theme) => ResponsiveStyleValue<...>)"
   }
  },
  "gridTemplateAreas": {
   "defaultValue": null,
   "description": "",
   "name": "gridTemplateAreas",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<GridTemplateAreas | GridTemplateAreas[]> | ((theme: Theme) => ResponsiveStyleValue<GridTemplateAreas | GridTemplateAreas[]>)"
   }
  },
  "gridArea": {
   "defaultValue": null,
   "description": "",
   "name": "gridArea",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<GridArea | GridArea[]> | ((theme: Theme) => ResponsiveStyleValue<GridArea | GridArea[]>)"
   }
  },
  "bgcolor": {
   "defaultValue": null,
   "description": "",
   "name": "bgcolor",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<BackgroundColor | BackgroundColor[]> | ((theme: Theme) => ResponsiveStyleValue<BackgroundColor | BackgroundColor[]>)"
   }
  },
  "color": {
   "defaultValue": null,
   "description": "",
   "name": "color",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<Color | Color[]> | ((theme: Theme) => ResponsiveStyleValue<Color | Color[]>)"
   }
  },
  "zIndex": {
   "defaultValue": null,
   "description": "",
   "name": "zIndex",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<string | (string & {}) | (number & {})> | ((theme: Theme) => ResponsiveStyleValue<string | (string & {}) | (number & {})>)"
   }
  },
  "position": {
   "defaultValue": null,
   "description": "",
   "name": "position",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<Position | Position[]> | ((theme: Theme) => ResponsiveStyleValue<Position | Position[]>)"
   }
  },
  "top": {
   "defaultValue": null,
   "description": "",
   "name": "top",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<Top<string | number> | Top<string | number>[]> | ((theme: Theme) => ResponsiveStyleValue<Top<string | number> | Top<string | number>[]>)"
   }
  },
  "right": {
   "defaultValue": null,
   "description": "",
   "name": "right",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<Right<string | number> | Right<string | number>[]> | ((theme: Theme) => ResponsiveStyleValue<Right<string | number> | Right<...>[]>)"
   }
  },
  "bottom": {
   "defaultValue": null,
   "description": "",
   "name": "bottom",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<Bottom<string | number> | Bottom<string | number>[]> | ((theme: Theme) => ResponsiveStyleValue<Bottom<string | number> | Bottom<...>[]>)"
   }
  },
  "left": {
   "defaultValue": null,
   "description": "",
   "name": "left",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<Left<string | number> | Left<string | number>[]> | ((theme: Theme) => ResponsiveStyleValue<Left<string | number> | Left<...>[]>)"
   }
  },
  "boxShadow": {
   "defaultValue": null,
   "description": "",
   "name": "boxShadow",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<number | BoxShadow> | ((theme: Theme) => ResponsiveStyleValue<number | BoxShadow>)"
   }
  },
  "width": {
   "defaultValue": null,
   "description": "",
   "name": "width",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<Width<string | number> | Width<string | number>[]> | ((theme: Theme) => ResponsiveStyleValue<Width<string | number> | Width<...>[]>)"
   }
  },
  "maxWidth": {
   "defaultValue": null,
   "description": "",
   "name": "maxWidth",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<MaxWidth<string | number> | MaxWidth<string | number>[]> | ((theme: Theme) => ResponsiveStyleValue<MaxWidth<string | number> | MaxWidth<...>[]>)"
   }
  },
  "minWidth": {
   "defaultValue": null,
   "description": "",
   "name": "minWidth",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<MinWidth<string | number> | MinWidth<string | number>[]> | ((theme: Theme) => ResponsiveStyleValue<MinWidth<string | number> | MinWidth<...>[]>)"
   }
  },
  "height": {
   "defaultValue": null,
   "description": "",
   "name": "height",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<Height<string | number> | Height<string | number>[]> | ((theme: Theme) => ResponsiveStyleValue<Height<string | number> | Height<...>[]>)"
   }
  },
  "maxHeight": {
   "defaultValue": null,
   "description": "",
   "name": "maxHeight",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<MaxHeight<string | number> | MaxHeight<string | number>[]> | ((theme: Theme) => ResponsiveStyleValue<MaxHeight<string | number> | MaxHeight<...>[]>)"
   }
  },
  "minHeight": {
   "defaultValue": null,
   "description": "",
   "name": "minHeight",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<MinHeight<string | number> | MinHeight<string | number>[]> | ((theme: Theme) => ResponsiveStyleValue<MinHeight<string | number> | MinHeight<...>[]>)"
   }
  },
  "boxSizing": {
   "defaultValue": null,
   "description": "",
   "name": "boxSizing",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<BoxSizing | BoxSizing[]> | ((theme: Theme) => ResponsiveStyleValue<BoxSizing | BoxSizing[]>)"
   }
  },
  "m": {
   "defaultValue": null,
   "description": "",
   "name": "m",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<Margin<string | number> | Margin<string | number>[]> | ((theme: Theme) => ResponsiveStyleValue<Margin<string | number> | Margin<...>[]>)"
   }
  },
  "mt": {
   "defaultValue": null,
   "description": "",
   "name": "mt",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<MarginTop<string | number> | MarginTop<string | number>[]> | ((theme: Theme) => ResponsiveStyleValue<MarginTop<string | number> | MarginTop<...>[]>)"
   }
  },
  "mr": {
   "defaultValue": null,
   "description": "",
   "name": "mr",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<MarginRight<string | number> | MarginRight<string | number>[]> | ((theme: Theme) => ResponsiveStyleValue<MarginRight<...> | MarginRight<...>[]>)"
   }
  },
  "mb": {
   "defaultValue": null,
   "description": "",
   "name": "mb",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<MarginBottom<string | number> | MarginBottom<string | number>[]> | ((theme: Theme) => ResponsiveStyleValue<...>)"
   }
  },
  "ml": {
   "defaultValue": null,
   "description": "",
   "name": "ml",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<MarginLeft<string | number> | MarginLeft<string | number>[]> | ((theme: Theme) => ResponsiveStyleValue<MarginLeft<string | number> | MarginLeft<...>[]>)"
   }
  },
  "mx": {
   "defaultValue": null,
   "description": "",
   "name": "mx",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<MarginLeft<string | number> | MarginLeft<string | number>[]> | ((theme: Theme) => ResponsiveStyleValue<MarginLeft<string | number> | MarginLeft<...>[]>)"
   }
  },
  "my": {
   "defaultValue": null,
   "description": "",
   "name": "my",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<MarginTop<string | number> | MarginTop<string | number>[]> | ((theme: Theme) => ResponsiveStyleValue<MarginTop<string | number> | MarginTop<...>[]>)"
   }
  },
  "p": {
   "defaultValue": null,
   "description": "",
   "name": "p",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<Padding<string | number> | Padding<string | number>[]> | ((theme: Theme) => ResponsiveStyleValue<Padding<string | number> | Padding<...>[]>)"
   }
  },
  "pt": {
   "defaultValue": null,
   "description": "",
   "name": "pt",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<PaddingTop<string | number> | PaddingTop<string | number>[]> | ((theme: Theme) => ResponsiveStyleValue<PaddingTop<string | number> | PaddingTop<...>[]>)"
   }
  },
  "pr": {
   "defaultValue": null,
   "description": "",
   "name": "pr",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<PaddingRight<string | number> | PaddingRight<string | number>[]> | ((theme: Theme) => ResponsiveStyleValue<...>)"
   }
  },
  "pb": {
   "defaultValue": null,
   "description": "",
   "name": "pb",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<PaddingBottom<string | number> | PaddingBottom<string | number>[]> | ((theme: Theme) => ResponsiveStyleValue<...>)"
   }
  },
  "pl": {
   "defaultValue": null,
   "description": "",
   "name": "pl",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<PaddingLeft<string | number> | PaddingLeft<string | number>[]> | ((theme: Theme) => ResponsiveStyleValue<PaddingLeft<...> | PaddingLeft<...>[]>)"
   }
  },
  "px": {
   "defaultValue": null,
   "description": "",
   "name": "px",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<PaddingLeft<string | number> | PaddingLeft<string | number>[]> | ((theme: Theme) => ResponsiveStyleValue<PaddingLeft<...> | PaddingLeft<...>[]>)"
   }
  },
  "py": {
   "defaultValue": null,
   "description": "",
   "name": "py",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<PaddingTop<string | number> | PaddingTop<string | number>[]> | ((theme: Theme) => ResponsiveStyleValue<PaddingTop<string | number> | PaddingTop<...>[]>)"
   }
  },
  "margin": {
   "defaultValue": null,
   "description": "",
   "name": "margin",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<Margin<string | number> | Margin<string | number>[]> | ((theme: Theme) => ResponsiveStyleValue<Margin<string | number> | Margin<...>[]>)"
   }
  },
  "marginTop": {
   "defaultValue": null,
   "description": "",
   "name": "marginTop",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<MarginTop<string | number> | MarginTop<string | number>[]> | ((theme: Theme) => ResponsiveStyleValue<MarginTop<string | number> | MarginTop<...>[]>)"
   }
  },
  "marginRight": {
   "defaultValue": null,
   "description": "",
   "name": "marginRight",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<MarginRight<string | number> | MarginRight<string | number>[]> | ((theme: Theme) => ResponsiveStyleValue<MarginRight<...> | MarginRight<...>[]>)"
   }
  },
  "marginBottom": {
   "defaultValue": null,
   "description": "",
   "name": "marginBottom",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<MarginBottom<string | number> | MarginBottom<string | number>[]> | ((theme: Theme) => ResponsiveStyleValue<...>)"
   }
  },
  "marginLeft": {
   "defaultValue": null,
   "description": "",
   "name": "marginLeft",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<MarginLeft<string | number> | MarginLeft<string | number>[]> | ((theme: Theme) => ResponsiveStyleValue<MarginLeft<string | number> | MarginLeft<...>[]>)"
   }
  },
  "marginX": {
   "defaultValue": null,
   "description": "",
   "name": "marginX",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<MarginLeft<string | number> | MarginLeft<string | number>[]> | ((theme: Theme) => ResponsiveStyleValue<MarginLeft<string | number> | MarginLeft<...>[]>)"
   }
  },
  "marginY": {
   "defaultValue": null,
   "description": "",
   "name": "marginY",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<MarginTop<string | number> | MarginTop<string | number>[]> | ((theme: Theme) => ResponsiveStyleValue<MarginTop<string | number> | MarginTop<...>[]>)"
   }
  },
  "padding": {
   "defaultValue": null,
   "description": "",
   "name": "padding",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<Padding<string | number> | Padding<string | number>[]> | ((theme: Theme) => ResponsiveStyleValue<Padding<string | number> | Padding<...>[]>)"
   }
  },
  "paddingTop": {
   "defaultValue": null,
   "description": "",
   "name": "paddingTop",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<PaddingTop<string | number> | PaddingTop<string | number>[]> | ((theme: Theme) => ResponsiveStyleValue<PaddingTop<string | number> | PaddingTop<...>[]>)"
   }
  },
  "paddingRight": {
   "defaultValue": null,
   "description": "",
   "name": "paddingRight",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<PaddingRight<string | number> | PaddingRight<string | number>[]> | ((theme: Theme) => ResponsiveStyleValue<...>)"
   }
  },
  "paddingBottom": {
   "defaultValue": null,
   "description": "",
   "name": "paddingBottom",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<PaddingBottom<string | number> | PaddingBottom<string | number>[]> | ((theme: Theme) => ResponsiveStyleValue<...>)"
   }
  },
  "paddingLeft": {
   "defaultValue": null,
   "description": "",
   "name": "paddingLeft",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<PaddingLeft<string | number> | PaddingLeft<string | number>[]> | ((theme: Theme) => ResponsiveStyleValue<PaddingLeft<...> | PaddingLeft<...>[]>)"
   }
  },
  "paddingX": {
   "defaultValue": null,
   "description": "",
   "name": "paddingX",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<PaddingLeft<string | number> | PaddingLeft<string | number>[]> | ((theme: Theme) => ResponsiveStyleValue<PaddingLeft<...> | PaddingLeft<...>[]>)"
   }
  },
  "paddingY": {
   "defaultValue": null,
   "description": "",
   "name": "paddingY",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<PaddingTop<string | number> | PaddingTop<string | number>[]> | ((theme: Theme) => ResponsiveStyleValue<PaddingTop<string | number> | PaddingTop<...>[]>)"
   }
  },
  "typography": {
   "defaultValue": null,
   "description": "",
   "name": "typography",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<string> | ((theme: Theme) => ResponsiveStyleValue<string>)"
   }
  },
  "fontFamily": {
   "defaultValue": null,
   "description": "",
   "name": "fontFamily",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<FontFamily | FontFamily[]> | ((theme: Theme) => ResponsiveStyleValue<FontFamily | FontFamily[]>)"
   }
  },
  "fontSize": {
   "defaultValue": null,
   "description": "",
   "name": "fontSize",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<FontSize<string | number> | FontSize<string | number>[]> | ((theme: Theme) => ResponsiveStyleValue<FontSize<string | number> | FontSize<...>[]>)"
   }
  },
  "fontStyle": {
   "defaultValue": null,
   "description": "",
   "name": "fontStyle",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<FontStyle | FontStyle[]> | ((theme: Theme) => ResponsiveStyleValue<FontStyle | FontStyle[]>)"
   }
  },
  "fontWeight": {
   "defaultValue": null,
   "description": "",
   "name": "fontWeight",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<string | (string & {}) | (number & {})> | ((theme: Theme) => ResponsiveStyleValue<string | (string & {}) | (number & {})>)"
   }
  },
  "letterSpacing": {
   "defaultValue": null,
   "description": "",
   "name": "letterSpacing",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<LetterSpacing<string | number> | LetterSpacing<string | number>[]> | ((theme: Theme) => ResponsiveStyleValue<...>)"
   }
  },
  "lineHeight": {
   "defaultValue": null,
   "description": "",
   "name": "lineHeight",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<LineHeight<string | number> | LineHeight<string | number>[]> | ((theme: Theme) => ResponsiveStyleValue<LineHeight<string | number> | LineHeight<...>[]>)"
   }
  },
  "textAlign": {
   "defaultValue": null,
   "description": "",
   "name": "textAlign",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<TextAlign | TextAlign[]> | ((theme: Theme) => ResponsiveStyleValue<TextAlign | TextAlign[]>)"
   }
  },
  "textTransform": {
   "defaultValue": null,
   "description": "",
   "name": "textTransform",
   "required": false,
   "type": {
    "name": "ResponsiveStyleValue<TextTransform | TextTransform[]> | ((theme: Theme) => ResponsiveStyleValue<TextTransform | TextTransform[]>)"
   }
  }
 }
}